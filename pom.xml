<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>aschworer.astrologer</groupId>
    <artifactId>astrologer-alexa</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <disableRequestSignatureCheck>false</disableRequestSignatureCheck>
        <timestampTolerance>150</timestampTolerance>
        <!--<lambda.functionCode>target/${artifactId}-jar-with-dependencies.jar</lambda.functionCode>-->
        <!--<lambda.version>${project.version}</lambda.version>-->
        <!--<lambda.publish>true</lambda.publish>-->
        <!--<lambda.forceUpdate>true</lambda.forceUpdate>-->
        <!--<lambda.functionNameSuffix>dev</lambda.functionNameSuffix>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.amazon.alexa</groupId>
            <artifactId>alexa-skills-kit</artifactId>
            <version>1.8.1</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-core</artifactId>
            <version>1.1.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-lambda -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-lambda</artifactId>
            <version>1.11.318</version>
        </dependency>

        <dependency>
            <groupId>com.google.maps</groupId>
            <artifactId>google-maps-services</artifactId>
            <version>0.2.7</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.20</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-log4j</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>2.0.2-beta</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>aschworer.astrologer</groupId>
            <artifactId>astrologer-model</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- define java version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <excludes>
                        <exclude>com/**</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <systemProperties>
                        <systemProperty>
                            <key>javax.net.ssl.keyStore</key>
                            <value>/insert/your/path/java-keystore.jks</value>
                        </systemProperty>
                        <systemProperty>
                            <key>javax.net.ssl.keyStorePassword</key>
                            <value>insert_your_password</value>
                        </systemProperty>
                        <systemProperty>
                            <key>com.amazon.speech.speechlet.servlet.disableRequestSignatureCheck</key>
                            <value>${disableRequestSignatureCheck}</value>
                        </systemProperty>
                        <!--<systemProperty>-->
                        <!--<key>com.amazon.speech.speechlet.servlet.supportedApplicationIds</key>-->
                        <!--<value>${supportedApplicationIds}</value>-->
                        <!--</systemProperty>-->
                        <systemProperty>
                            <key>com.amazon.speech.speechlet.servlet.timestampTolerance</key>
                            <value>${timestampTolerance}</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
            </plugin>


            <!--<plugin>
                <groupId>com.github.seanroy</groupId>
                <artifactId>lambda-maven-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <functionCode>${lambda.functionCode}</functionCode>
                    <version>${lambda.version}</version>
                    <alias>development</alias>
                    <vpcSecurityGroupIds>sg-123456</vpcSecurityGroupIds>
                    <vpcSubnetIds>subnet-123456,subnet-123456,subnet-123456</vpcSubnetIds>
                    <lambdaRoleArn>arn:aws:iam::1234567:role/YourLambdaS3Role</lambdaRoleArn>
                    <s3Bucket>mys3bucket</s3Bucket>
                    <keyPrefix>my/awesome/prefix</keyPrefix>
                    <publish>${lambda.publish}</publish>
                    <forceUpdate>${lambda.forceUpdate}</forceUpdate>
                    <functionNameSuffix>${lambda.functionNameSuffix}</functionNameSuffix>
                    <environmentVariables>
                        <key0>value0</key0>
                    </environmentVariables>
                    <clientConfiguration>
                        <protocol>https</protocol>
                        <proxyHost>proxy-host.net</proxyHost>
                        <proxyPort>1234</proxyPort>
                    </clientConfiguration>
                    <lambdaFunctionsJSON>
                        [
                        {
                        "functionName": "my-function-name-0",
                        "description": "I am awesome function",
                        "handler": "no.flowlab.lambda0::test",
                        "timeout": 30,
                        "memorySize": 512,
                        "keepAlive": 15,
                        "triggers": [
                        {
                        "integration": "CloudWatch Events - Schedule",
                        "ruleName": "every-minute",
                        "ruleDescription": "foo bar",
                        "scheduleExpression": "rate(1 minute)"
                        },
                        {
                        "integration": "DynamoDB",
                        "dynamoDBTable": "myTable",
                        "batchSize": 100,
                        "startingPosition": "TRIM_HORIZON"
                        },
                        {
                        "integration": "Kinesis",
                        "kinesisStream": "myStream",
                        "batchSize": 100,
                        "startingPosition": "TRIM_HORIZON"
                        },
                        {
                        "integration": "SNS",
                        "SNSTopic": "SNSTopic-1"
                        },
                        {
                        "integration": "SNS",
                        "SNSTopic": "SNSTopic-2"
                        },
                        {
                        "integration": "Alexa Skills Kit"
                        },
                        {
                        "integration": "Lex",
                        "lexBotName": "BookCar"
                        }
                        ],
                        "environmentVariables": {
                        "key1": "value1",
                        "key2": "value2"
                        }
                        },
                        {
                        "functionName": "my-function-name-1",
                        "description": "I am awesome function too",
                        "handler": "no.flowlab.lambda1"
                        }
                        ]
                    </lambdaFunctionsJSON>
                </configuration>
            </plugin>-->

        </plugins>
    </build>

</project>